{
  "ignition": {
    "config": {},
    "timeouts": {},
    "version": "2.1.0"
  },
  "networkd": {},
  "passwd": {},
  "storage": {
    "directories": [
      {
        "filesystem": "root",
        "group": {},
        "path": "/opt",
        "user": {},
        "mode": 493
      },
      {
        "filesystem": "root",
        "group": {},
        "path": "/opt/minikube",
        "user": {},
        "mode": 493
      },
      {
        "filesystem": "root",
        "group": {},
        "path": "/opt/bricks",
        "user": {},
        "mode": 493
      },
      {
        "filesystem": "root",
        "group": {},
        "path": "/opt/local",
        "user": {},
        "mode": 493
      },
      {
        "filesystem": "root",
        "group": {},
        "path": "/opt/local/sbin",
        "user": {},
        "mode": 493
      },
      {
        "filesystem": "root",
        "group": {},
        "path": "/opt/local/lib64",
        "user": {},
        "mode": 493
      },
      {
        "filesystem": "root",
        "group": {},
        "path": "/opt/local/lib",
        "user": {},
        "mode": 493
      },
      {
        "filesystem": "root",
        "group": {},
        "path": "/opt/local/bin",
        "user": {},
        "mode": 493
      }
    ],
    "files": [
      {
        "filesystem": "root",
        "group": {},
        "path": "/etc/systemd/network/00-eth1.network.d/domain.conf",
        "user": {},
        "contents": {
          "source": "data:,%5BNetwork%5D%0ADomains%3Dvagrant.amobee.com%0A",
          "verification": {}
        },
        "mode": 493
      },
      {
        "filesystem": "root",
        "group": {},
        "path": "/opt/bricks/install-bricks.sh",
        "user": {},
        "contents": {
          "source": "data:,%23!%2Fbin%2Fbash%20-e%0A%0A%23%20Wait%20for%20NFS%20mounts%0Afor%20i%20in%20%7B1..150%7D%3B%20do%20%23%20timeout%20for%205%20minutes%0A%20%20if%20%5B%20-n%20%22%24(%2Fbin%2Fls%20-d%20%2FUsers%2F*%202%3E%2Fdev%2Fnull)%22%20%5D%3B%20then%0A%20%20%20%20break%0A%20%20fi%0A%20%20echo%20%22Waiting%20for%20NFS%20mounts...%22%0A%20%20sleep%202%0Adone%0A%0ADOCKER_VERSION%3D%24(docker%20version%20-f%20%7B%7B.Client.Version%7D%7D)%0Aecho%20%22Docker%20client%20version%20to%20install%20%24%7BDOCKER_VERSION%7D%22%0A%0AUSER_HOME%3D%24(echo%20%2FUsers%2F*%20%7C%20head%20-1)%0ADOCKER%3D%24%7BHOME%7D%2F.docker%0Amkdir%20-p%20%24DOCKER%0A%0AURL%3Dhttps%3A%2F%2Fdownload.docker.com%2Fmac%2Fstatic%2Fedge%2F%24(uname%20-m)%2Fdocker-%24%7BDOCKER_VERSION%7D.tgz%0A%0Aecho%20%22Fetching%20docker%20image%20from%20%24URL%22%0Acurl%20-s%20-o%20-%20%24URL%20%7C%20tar%20xzf%20-%20-O%20docker%2Fdocker%20%3E%20%24%7BDOCKER%7D%2Fdocker%0A%0Asudo%20chmod%20%2Bx%20%24%7BDOCKER%7D%2Fdocker%0A%0Amkdir%20-p%20%24%7BUSER_HOME%7D%2F.bricks%2Fbin%0Acp%20-af%20%24%7BDOCKER%7D%2Fdocker%20%24%7BUSER_HOME%7D%2F.bricks%2Fbin%2Fdocker%0Arm%20-rf%20%24DOCKER%0A",
          "verification": {}
        },
        "mode": 493
      },
      {
        "filesystem": "root",
        "group": {},
        "path": "/opt/minikube/install-minikube.sh",
        "user": {},
        "contents": {
          "source": "data:,%23!%2Fbin%2Fbash%20-e%0A%0A%23%20Wait%20for%20NFS%20mounts%0Afor%20i%20in%20%7B1..150%7D%3B%20do%20%23%20timeout%20for%205%20minutes%0A%20%20if%20%5B%20-n%20%22%24(%2Fbin%2Fls%20-d%20%2FUsers%2F*%202%3E%2Fdev%2Fnull)%22%20%5D%3B%20then%0A%20%20%20%20break%0A%20%20fi%0A%20%20echo%20%22Waiting%20for%20NFS%20mounts...%22%0A%20%20sleep%202%0Adone%0A%0Aexport%20MK%3D%2Fusr%2Flocal%2Fbin%2Fminikube%0Aexport%20KUBECTL%3D%2Fusr%2Flocal%2Fbin%2Fkubectl%0AUSER_HOME%3D%24(echo%20%2FUsers%2F*%20%7C%20head%20-1)%0AVAGRANT%3D%24%7BUSER_HOME%7D%2F.bricks%2Fclusters%2Fvagrant%0A%0Asudo%20curl%20-Lo%20%24MK%20https%3A%2F%2Fstorage.googleapis.com%2Fminikube%2Freleases%2Fv0.24.1%2Fminikube-linux-amd64%20%26%26%20sudo%20chmod%20%2Bx%20%24MK%0Asudo%20curl%20-Lo%20%24KUBECTL%20https%3A%2F%2Fstorage.googleapis.com%2Fkubernetes-release%2Frelease%2F%24(curl%20-s%20https%3A%2F%2Fstorage.googleapis.com%2Fkubernetes-release%2Frelease%2Fstable.txt)%2Fbin%2Flinux%2Famd64%2Fkubectl%20%26%26%20sudo%20chmod%20%2Bx%20%24KUBECTL%0A%0Aexport%20MINIKUBE_WANTUPDATENOTIFICATION%3Dtrue%0Aexport%20MINIKUBE_WANTREPORTERRORPROMPT%3Dfalse%0Aexport%20MINIKUBE_WANTKUBECTLDOWNLOADMSG%3Dfalse%0Aexport%20MINIKUBE_HOME%3D%24USER_HOME%2F.bricks%2Fclusters%2Fvagrant%0Aexport%20CHANGE_MINIKUBE_NONE_USER%3Dtrue%0A%0Aexport%20KUBECONFIG%3D%24HOME%2Fvagrant%2Fkubeconfig.yaml%0A%0Arm%20-rf%20%24HOME%2Fvagrant%0Amkdir%20-p%20%24HOME%2Fvagrant%0Amkdir%20-p%20%24USER_HOME%2F.bricks%2Fclusters%0Arm%20-rf%20%24USER_HOME%2F.bricks%2Fclusters%2Fvagrant%0Aln%20-s%20%24HOME%2Fvagrant%20%24USER_HOME%2F.bricks%2Fclusters%2Fvagrant%0A%0Asudo%20-E%20%24MK%20start%20--vm-driver%3Dnone%20--loglevel%200%20--logtostderr%0A%0Aset%20-x%0A%0Arm%20-rf%20%24VAGRANT%0Acp%20-af%20%24HOME%2Fvagrant%20%24VAGRANT%0Arm%20-rf%20%24HOME%2Fvagrant%0Amkdir%20-p%20%24HOME%2F.kube%0Aln%20-s%20%24USER_HOME%2F.bricks%2Fclusters%2Fvagrant%2Fkubeconfig.yaml%20%24HOME%2F.kube%2Fconfig%0Aln%20-s%20%24USER_HOME%2F.bricks%2Fclusters%2Fvagrant%2F.minikube%20%24HOME%2F.minikube%0Aunset%20KUBECONFIG%0A%0A%23%20this%20for%20loop%20waits%20until%20kubectl%20can%20access%20the%20api%20server%20that%20Minikube%20has%20created%0Afor%20i%20in%20%7B1..150%7D%3B%20do%20%23%20timeout%20for%205%20minutes%0A%20%20%20%24KUBECTL%20get%20po%20%26%3E%20%2Fdev%2Fnull%20%7C%7C%20true%0A%20%20%20if%20%5B%20%24%3F%20-ne%201%20%5D%3B%20then%0A%20%20%20%20%20%20break%0A%20%20fi%0A%20%20sleep%202%0Adone%0A",
          "verification": {}
        },
        "mode": 493
      },
      {
        "filesystem": "root",
        "group": {},
        "path": "/etc/coreos/update.conf",
        "user": {},
        "contents": {
          "source": "data:,GROUP%3Dstable%0AREBOOT_STRATEGY%3D%22reboot%22",
          "verification": {}
        },
        "mode": 420
      }
    ]
  },
  "systemd": {
    "units": [
      {
        "contents": "[Unit]\nDescription=Docker Socket for the API\n\n[Socket]\nListenStream=2375\nService=docker.service\nBindIPv6Only=both\n\n[Install]\nWantedBy=sockets.target\n",
        "enable": true,
        "name": "docker-tcp.socket"
      },
      {
        "contents": "[Mount]\nWhat=/opt/local\nWhere=/usr/local\nOptions=bind\n\n[Install]\nWantedBy=multi-user.target\n",
        "enable": true,
        "name": "usr-local.mount"
      },
      {
        "contents": "[Unit]\nDescription=Install minikube\nConditionPathExists=!/usr/local/bin/localkube\n\n[Service]\nType=oneshot\nExecStart=/opt/minikube/install-minikube.sh\nRemainAfterExit=true\nUser=core\n\n[Install]\nWantedBy=multi-user.target\n",
        "enable": true,
        "name": "install-minikube.service"
      },
      {
        "contents": "[Unit]\nDescription=Install bricks\n\n[Service]\nType=oneshot\nExecStart=/opt/bricks/install-bricks.sh\nRemainAfterExit=true\nUser=core\n\n[Install]\nWantedBy=multi-user.target\n",
        "enable": true,
        "name": "install-bricks.service"
      }
    ]
  }
}
